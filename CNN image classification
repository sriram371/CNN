import tensorflow as tf
from tensorflow import keras
from keras.models import Sequential
from keras.layers import Dense,Flatten,Conv2D,MaxPooling2D,Dropout,Embedding
from keras.utils import to_categorical
import numpy as np
import matplotlib.pyplot as plt
plt.style.use('fivethirtyeight')

from keras.datasets import cifar10

(X_train,y_train),(X_test,y_test)=cifar10.load_data()

#get the shape of x_train
print('X_train shape:',X_train.shape)
#get the shape of y_train
print('y_train shape:',y_train.shape)
#get the shape of x_train
print('x_test shape:',X_test.shape)
#get the shape of y_test
print('y_test shape:',y_test.shape)

img=plt.imshow(X_train[0])

y_train

y_train_one_hot= to_categorical(y_train)
y_test_one_hot= to_categorical(y_test)
 
print(y_train_one_hot)

X_train=X_train/255
X_test=X_test/255

model=Sequential()
model.add(Conv2D(32,(5,5),activation='relu',input_shape=(32,32,3)))
model.add(MaxPooling2D(pool_size=(2,2)))
model.add(Conv2D(64,(5,5),activation='relu'))
model.add(MaxPooling2D(pool_size=(2,2)))
model.add(Flatten())
model.add(Dense(1000,activation='relu'))
model.add(Dropout(0.5))
model.add(Dense(500,activation='relu'))
model.add(Dropout(0.5))
model.add(Dense(250,activation='relu'))
model.add(Dense(10,activation='softmax'))
 
model.compile(loss='categorical_crossentropy',
              optimizer='adam',
              metrics=['accuracy'])

model.summary()

hist=model.fit(X_train,y_train_one_hot,batch_size=256,epochs=10,validation_split=0.2)

model.evaluate(X_test,y_test_one_hot)[1]

#visualize the models accuracy
plt.plot(hist.history['accuracy'])
plt.plot(hist.history['val_accuracy'])
plt.title('Model accuracy')
plt.ylabel('Accuracy')
plt.xlabel('Epoch')
plt.legend(['Train','Val'],loc='upper left')
plt.show()

#visualize the models loss
plt.plot(hist.history['loss'])
plt.plot(hist.history['val_accuracy'])
plt.title('Model loss')
plt.ylabel('Loss')
plt.xlabel('Epoch')
plt.legend(['Train','Val'],loc='upper right')
plt.show()
